   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__CCP__ = 0x34
   7               	__tmp_reg__ = 0
   8               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  11               		.cfi_sections	.debug_frame
  12               		.file 0 "/home/penguin/Code/projects/ese381/review/lab4" "main.c"
  13               	.global	USART3_init
  15               	USART3_init:
  16               	.LFB0:
  17               		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        ****  * USART_write_message.c
   3:main.c        ****  *
   4:main.c        ****  * Created: 2/26/2025 9:07:51 AM
   5:main.c        ****  * Author : Katherine Trusinski and Stanley Cokro
   6:main.c        ****  * Description: Modifying program from task 3, lab 4, to send message to SerLCD
   7:main.c        ****  */
   8:main.c        **** 
   9:main.c        **** #include <avr/io.h>
  10:main.c        **** 
  11:main.c        **** void USART3_init(void) {
  18               		.loc 1 11 24 view -0
  19               		.cfi_startproc
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
  12:main.c        ****     // Set the baud rate (USARTn.BAUD)
  13:main.c        ****     // Using (64 * f_CLKPER) / (16 * f_baud) formula from the datasheet.
  14:main.c        ****     // Clock frequency (f_CLKPER) = 4,000,000 Hz, Baud rate (f_baud) = 9600.
  15:main.c        ****     USART3.BAUD = 5000/3;
  24               		.loc 1 15 4 view .LVU1
  25               		.loc 1 15 16 is_stmt 0 view .LVU2
  26 0000 E0E6      		ldi r30,lo8(96)
  27 0002 F8E0      		ldi r31,lo8(8)
  28 0004 82E8      		ldi r24,lo8(-126)
  29 0006 96E0      		ldi r25,lo8(6)
  30 0008 8087      		std Z+8,r24
  31 000a 9187      		std Z+9,r25
  16:main.c        **** 
  17:main.c        ****     // Set the frame format and mode of operation (USARTn.CTRLC)
  18:main.c        ****     USART3.CTRLC = USART_CMODE_ASYNCHRONOUS_gc | USART_PMODE_DISABLED_gc |
  32               		.loc 1 18 4 is_stmt 1 view .LVU3
  33               		.loc 1 18 17 is_stmt 0 view .LVU4
  34 000c 83E0      		ldi r24,lo8(3)
  35 000e 8783      		std Z+7,r24
  19:main.c        ****     USART_SBMODE_1BIT_gc | USART_CHSIZE_8BIT_gc;
  20:main.c        **** 
  21:main.c        ****     // Enable transmitter only (USARTn.CTRLB)
  22:main.c        ****     USART3.CTRLB = USART_TXEN_bm;
  36               		.loc 1 22 4 is_stmt 1 view .LVU5
  37               		.loc 1 22 17 is_stmt 0 view .LVU6
  38 0010 80E4      		ldi r24,lo8(64)
  39 0012 8683      		std Z+6,r24
  23:main.c        **** 
  24:main.c        ****     // Set PB0 (TX) as output
  25:main.c        ****     VPORTB.DIR |= PIN0_bm;
  40               		.loc 1 25 4 is_stmt 1 view .LVU7
  41               		.loc 1 25 10 is_stmt 0 view .LVU8
  42 0014 84B1      		in r24,0x4
  43               		.loc 1 25 15 view .LVU9
  44 0016 8160      		ori r24,lo8(1)
  45 0018 84B9      		out 0x4,r24
  46               	/* epilogue start */
  26:main.c        **** }
  47               		.loc 1 26 1 view .LVU10
  48 001a 0895      		ret
  49               		.cfi_endproc
  50               	.LFE0:
  52               	.global	USART3_sendChar
  54               	USART3_sendChar:
  55               	.LFB1:
  27:main.c        **** 
  28:main.c        **** void USART3_sendChar(char c) {
  56               		.loc 1 28 30 is_stmt 1 view -0
  57               		.cfi_startproc
  58               	/* prologue: function */
  59               	/* frame size = 0 */
  60               	/* stack size = 0 */
  61               	.L__stack_usage = 0
  62               	.LVL0:
  63               	.L3:
  29:main.c        ****     // Wait until the transmit buffer is empty (USART_DREIF)
  30:main.c        ****     while (!(USART3.STATUS & USART_DREIF_bm)) {}
  64               		.loc 1 30 47 discriminator 1 view .LVU12
  65               		.loc 1 30 12 discriminator 1 view .LVU13
  66               		.loc 1 30 19 is_stmt 0 discriminator 1 view .LVU14
  67 001c 9091 6408 		lds r25,2148
  68               		.loc 1 30 12 discriminator 1 view .LVU15
  69 0020 95FF      		sbrs r25,5
  70 0022 00C0      		rjmp .L3
  31:main.c        ****     USART3.TXDATAL = c;
  71               		.loc 1 31 4 is_stmt 1 view .LVU16
  72               		.loc 1 31 19 is_stmt 0 view .LVU17
  73 0024 8093 6208 		sts 2146,r24
  74               	/* epilogue start */
  32:main.c        **** }
  75               		.loc 1 32 1 view .LVU18
  76 0028 0895      		ret
  77               		.cfi_endproc
  78               	.LFE1:
  80               		.section	.rodata
  81               	.LC0:
  82 0000 4865 6C6C 		.string	"Hello World"
  82      6F20 576F 
  82      726C 6400 
  83 000c 00        		.string	""
  84               	.LC1:
  85 000d 5768 6174 		.string	"What happens now"
  85      2068 6170 
  85      7065 6E73 
  85      206E 6F77 
  85      00
  86 001e 00        		.string	""
  87               		.text
  88               	.global	main
  90               	main:
  91               	.LFB2:
  33:main.c        **** 
  34:main.c        **** int main(void) {
  92               		.loc 1 34 16 is_stmt 1 view -0
  93               		.cfi_startproc
  94 002a CDB7      		in r28,__SP_L__
  95 002c DEB7      		in r29,__SP_H__
  96               		.cfi_def_cfa_register 28
  97 002e 6F97      		sbiw r28,31
  98               		.cfi_def_cfa_offset 33
  99 0030 CDBF      		out __SP_L__,r28
 100 0032 DEBF      		out __SP_H__,r29
 101               	/* prologue: function */
 102               	/* frame size = 31 */
 103               	/* stack size = 31 */
 104               	.L__stack_usage = 31
  35:main.c        ****     USART3_init(); // Initialize USART3
 105               		.loc 1 35 5 view .LVU20
 106 0034 0E94 0000 		call USART3_init
 107               	.LVL1:
  36:main.c        **** 
  37:main.c        ****     USART3_sendChar('|');
 108               		.loc 1 37 5 view .LVU21
 109 0038 8CE7      		ldi r24,lo8(124)
 110 003a 0E94 0000 		call USART3_sendChar
 111               	.LVL2:
  38:main.c        ****     USART3_sendChar('-');
 112               		.loc 1 38 5 view .LVU22
 113 003e 8DE2      		ldi r24,lo8(45)
 114 0040 0E94 0000 		call USART3_sendChar
 115               	.LVL3:
  39:main.c        ****     uint8_t message[] = "Hello World\0"; // Message to be sent, put 9 spaces incase newline does no
 116               		.loc 1 39 5 view .LVU23
 117               		.loc 1 39 13 is_stmt 0 view .LVU24
 118 0044 8DE0      		ldi r24,lo8(13)
 119 0046 E0E0      		ldi r30,lo8(.LC0)
 120 0048 F0E0      		ldi r31,hi8(.LC0)
 121 004a DE01      		movw r26,r28
 122 004c 1196      		adiw r26,1
 123               		0:
 124 004e 0190      		ld r0,Z+
 125 0050 0D92      		st X+,r0
 126 0052 8A95      		dec r24
 127 0054 01F4      		brne 0b
  40:main.c        ****     uint8_t i = 0;
 128               		.loc 1 40 5 is_stmt 1 view .LVU25
 129               	.LVL4:
  41:main.c        ****     while (message[i] != '\0') {
 130               		.loc 1 41 5 view .LVU26
  40:main.c        ****     uint8_t i = 0;
 131               		.loc 1 40 13 is_stmt 0 view .LVU27
 132 0056 00E0      		ldi r16,0
 133               		.loc 1 41 11 view .LVU28
 134 0058 00C0      		rjmp .L5
 135               	.LVL5:
 136               	.L6:
  42:main.c        ****         USART3_sendChar(message[i]); // Send the current character
 137               		.loc 1 42 9 is_stmt 1 view .LVU29
 138 005a 812F      		mov r24,r17
 139 005c 0E94 0000 		call USART3_sendChar
 140               	.LVL6:
  43:main.c        ****         i++; // Move to the next character
 141               		.loc 1 43 9 view .LVU30
 142               		.loc 1 43 10 is_stmt 0 view .LVU31
 143 0060 0F5F      		subi r16,lo8(-(1))
 144               	.LVL7:
 145               	.L5:
  41:main.c        ****     while (message[i] != '\0') {
 146               		.loc 1 41 23 is_stmt 1 view .LVU32
  41:main.c        ****     while (message[i] != '\0') {
 147               		.loc 1 41 19 is_stmt 0 view .LVU33
 148 0062 E1E0      		ldi r30,lo8(1)
 149 0064 F0E0      		ldi r31,0
 150 0066 EC0F      		add r30,r28
 151 0068 FD1F      		adc r31,r29
 152 006a E00F      		add r30,r16
 153 006c F11D      		adc r31,__zero_reg__
 154 006e 1081      		ld r17,Z
  41:main.c        ****     while (message[i] != '\0') {
 155               		.loc 1 41 23 view .LVU34
 156 0070 1111      		cpse r17,__zero_reg__
 157 0072 00C0      		rjmp .L6
  44:main.c        ****     }
  45:main.c        ****     // some code to move the cursor into the new row
  46:main.c        ****     USART3_sendChar(254);
 158               		.loc 1 46 5 is_stmt 1 view .LVU35
 159 0074 8EEF      		ldi r24,lo8(-2)
 160 0076 0E94 0000 		call USART3_sendChar
 161               	.LVL8:
  47:main.c        ****     USART3_sendChar(128+64);
 162               		.loc 1 47 5 view .LVU36
 163 007a 80EC      		ldi r24,lo8(-64)
 164 007c 0E94 0000 		call USART3_sendChar
 165               	.LVL9:
  48:main.c        ****     uint8_t message2[] = "What happens now\0";
 166               		.loc 1 48 5 view .LVU37
 167               		.loc 1 48 13 is_stmt 0 view .LVU38
 168 0080 82E1      		ldi r24,lo8(18)
 169 0082 E0E0      		ldi r30,lo8(.LC1)
 170 0084 F0E0      		ldi r31,hi8(.LC1)
 171 0086 DE01      		movw r26,r28
 172 0088 1E96      		adiw r26,14
 173               		0:
 174 008a 0190      		ld r0,Z+
 175 008c 0D92      		st X+,r0
 176 008e 8A95      		dec r24
 177 0090 01F4      		brne 0b
  49:main.c        ****     i = 0;
 178               		.loc 1 49 5 is_stmt 1 view .LVU39
 179               	.LVL10:
  50:main.c        ****     while (message2[i] != '\0') {
 180               		.loc 1 50 5 view .LVU40
 181               		.loc 1 50 11 is_stmt 0 view .LVU41
 182 0092 00C0      		rjmp .L7
 183               	.LVL11:
 184               	.L8:
  51:main.c        ****         USART3_sendChar(message[i]); // Send the current character
 185               		.loc 1 51 9 is_stmt 1 view .LVU42
 186               		.loc 1 51 32 is_stmt 0 view .LVU43
 187 0094 E1E0      		ldi r30,lo8(1)
 188 0096 F0E0      		ldi r31,0
 189 0098 EC0F      		add r30,r28
 190 009a FD1F      		adc r31,r29
 191 009c E20F      		add r30,r18
 192 009e F31F      		adc r31,r19
 193               		.loc 1 51 9 view .LVU44
 194 00a0 8081      		ld r24,Z
 195 00a2 0E94 0000 		call USART3_sendChar
 196               	.LVL12:
  52:main.c        ****         i++; // Move to the next character
 197               		.loc 1 52 9 is_stmt 1 view .LVU45
 198               		.loc 1 52 10 is_stmt 0 view .LVU46
 199 00a6 1F5F      		subi r17,lo8(-(1))
 200               	.LVL13:
 201               	.L7:
  50:main.c        ****     while (message2[i] != '\0') {
 202               		.loc 1 50 24 is_stmt 1 view .LVU47
  50:main.c        ****     while (message2[i] != '\0') {
 203               		.loc 1 50 20 is_stmt 0 view .LVU48
 204 00a8 212F      		mov r18,r17
 205 00aa 30E0      		ldi r19,0
 206 00ac EEE0      		ldi r30,lo8(14)
 207 00ae F0E0      		ldi r31,0
 208 00b0 EC0F      		add r30,r28
 209 00b2 FD1F      		adc r31,r29
 210 00b4 E10F      		add r30,r17
 211 00b6 F11D      		adc r31,__zero_reg__
 212 00b8 8081      		ld r24,Z
  50:main.c        ****     while (message2[i] != '\0') {
 213               		.loc 1 50 24 view .LVU49
 214 00ba 8111      		cpse r24,__zero_reg__
 215 00bc 00C0      		rjmp .L8
  53:main.c        ****     }
  54:main.c        **** }
 216               		.loc 1 54 1 view .LVU50
 217 00be 80E0      		ldi r24,0
 218 00c0 90E0      		ldi r25,0
 219               	/* epilogue start */
 220 00c2 6F96      		adiw r28,31
 221 00c4 CDBF      		out __SP_L__,r28
 222 00c6 DEBF      		out __SP_H__,r29
 223 00c8 0895      		ret
 224               		.cfi_endproc
 225               	.LFE2:
 227               	.Letext0:
 228               		.file 2 "/usr/avr/include/stdint.h"
 229               		.file 3 "/usr/avr/include/avr/ioavr128db48.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
   output.elf-main.s:2      *ABS*:0000003e __SP_H__
   output.elf-main.s:3      *ABS*:0000003d __SP_L__
   output.elf-main.s:4      *ABS*:0000003f __SREG__
   output.elf-main.s:5      *ABS*:0000003b __RAMPZ__
   output.elf-main.s:6      *ABS*:00000034 __CCP__
   output.elf-main.s:7      *ABS*:00000000 __tmp_reg__
   output.elf-main.s:8      *ABS*:00000001 __zero_reg__
   output.elf-main.s:15     .text:00000000 USART3_init
   output.elf-main.s:18     .text:00000000 .Loc.0
   output.elf-main.s:19     .text:00000000 L0
   output.elf-main.s:24     .text:00000000 .Loc.1
   output.elf-main.s:25     .text:00000000 .Loc.2
   output.elf-main.s:32     .text:0000000c .Loc.3
   output.elf-main.s:33     .text:0000000c .Loc.4
   output.elf-main.s:36     .text:00000010 .Loc.5
   output.elf-main.s:37     .text:00000010 .Loc.6
   output.elf-main.s:40     .text:00000014 .Loc.7
   output.elf-main.s:41     .text:00000014 .Loc.8
   output.elf-main.s:43     .text:00000016 .Loc.9
   output.elf-main.s:47     .text:0000001a .Loc.10
   output.elf-main.s:49     .text:0000001c L0
   output.elf-main.s:54     .text:0000001c USART3_sendChar
   output.elf-main.s:56     .text:0000001c .Loc.11
   output.elf-main.s:57     .text:0000001c L0
   output.elf-main.s:64     .text:0000001c .Loc.12
   output.elf-main.s:65     .text:0000001c .Loc.13
   output.elf-main.s:66     .text:0000001c .Loc.14
   output.elf-main.s:68     .text:00000020 .Loc.15
   output.elf-main.s:71     .text:00000024 .Loc.16
   output.elf-main.s:72     .text:00000024 .Loc.17
   output.elf-main.s:75     .text:00000028 .Loc.18
   output.elf-main.s:77     .text:0000002a L0
   output.elf-main.s:90     .text:0000002a main
   output.elf-main.s:92     .text:0000002a .Loc.19
   output.elf-main.s:93     .text:0000002a L0
   output.elf-main.s:105    .text:00000034 .Loc.20
   output.elf-main.s:108    .text:00000038 .Loc.21
   output.elf-main.s:112    .text:0000003e .Loc.22
   output.elf-main.s:116    .text:00000044 .Loc.23
   output.elf-main.s:117    .text:00000044 .Loc.24
   output.elf-main.s:128    .text:00000056 .Loc.25
   output.elf-main.s:130    .text:00000056 .Loc.26
   output.elf-main.s:131    .text:00000056 .Loc.27
   output.elf-main.s:133    .text:00000058 .Loc.28
   output.elf-main.s:137    .text:0000005a .Loc.29
   output.elf-main.s:141    .text:00000060 .Loc.30
   output.elf-main.s:142    .text:00000060 .Loc.31
   output.elf-main.s:146    .text:00000062 .Loc.32
   output.elf-main.s:147    .text:00000062 .Loc.33
   output.elf-main.s:155    .text:00000070 .Loc.34
   output.elf-main.s:158    .text:00000074 .Loc.35
   output.elf-main.s:162    .text:0000007a .Loc.36
   output.elf-main.s:166    .text:00000080 .Loc.37
   output.elf-main.s:167    .text:00000080 .Loc.38
   output.elf-main.s:178    .text:00000092 .Loc.39
   output.elf-main.s:180    .text:00000092 .Loc.40
   output.elf-main.s:181    .text:00000092 .Loc.41
   output.elf-main.s:185    .text:00000094 .Loc.42
   output.elf-main.s:186    .text:00000094 .Loc.43
   output.elf-main.s:193    .text:000000a0 .Loc.44
   output.elf-main.s:197    .text:000000a6 .Loc.45
   output.elf-main.s:198    .text:000000a6 .Loc.46
   output.elf-main.s:202    .text:000000a8 .Loc.47
   output.elf-main.s:203    .text:000000a8 .Loc.48
   output.elf-main.s:213    .text:000000ba .Loc.49
   output.elf-main.s:216    .text:000000be .Loc.50
   output.elf-main.s:224    .text:000000ca L0
   output.elf-main.s:230    .text:000000ca L0
                     .debug_frame:00000000 L0
   output.elf-main.s:63     .text:0000001c .L3
   output.elf-main.s:81     .rodata:00000000 .LC0
   output.elf-main.s:123    .text:0000004e .L01
   output.elf-main.s:145    .text:00000062 .L5
   output.elf-main.s:136    .text:0000005a .L6
   output.elf-main.s:84     .rodata:0000000d .LC1
   output.elf-main.s:173    .text:0000008a .L02
   output.elf-main.s:201    .text:000000a8 .L7
   output.elf-main.s:184    .text:00000094 .L8
   output.elf-main.s:688    .debug_abbrev:00000000 .Ldebug_abbrev0
   output.elf-main.s:10     .text:00000000 .Ltext0
   output.elf-main.s:227    .text:000000ca .Letext0
   output.elf-main.s:1175   .debug_line:00000000 .Ldebug_line0
   output.elf-main.s:91     .text:0000002a .LFB2
   output.elf-main.s:225    .text:000000ca .LFE2
   output.elf-main.s:1127   .debug_loclists:00000014 .LLST1
   output.elf-main.s:1118   .debug_loclists:0000000c .LVUS1
   output.elf-main.s:107    .text:00000038 .LVL1
   output.elf-main.s:111    .text:0000003e .LVL2
   output.elf-main.s:115    .text:00000044 .LVL3
   output.elf-main.s:140    .text:00000060 .LVL6
   output.elf-main.s:161    .text:0000007a .LVL8
   output.elf-main.s:165    .text:00000080 .LVL9
   output.elf-main.s:196    .text:000000a6 .LVL12
   output.elf-main.s:55     .text:0000001c .LFB1
   output.elf-main.s:78     .text:0000002a .LFE1
   output.elf-main.s:1154   .debug_loclists:00000032 .LLST0
   output.elf-main.s:1151   .debug_loclists:00000030 .LVUS0
   output.elf-main.s:16     .text:00000000 .LFB0
   output.elf-main.s:50     .text:0000001c .LFE0
   output.elf-main.s:231    .debug_info:00000000 .Ldebug_info0

NO UNDEFINED SYMBOLS
