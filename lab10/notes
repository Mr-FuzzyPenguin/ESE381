//Main function provided by Professor Short via lecture slides.

int main(void)
{
	I2C0_SCD41_init();	// Initialize I2C0 to talk to SCD41 slave.
	_delay_ms(2000);	// Wait 1 second for SCD41 to power up
	
	SCD41_send_cmd(SCD41_ADDR, START_PERIODIC_MEASUREMENT);
	_delay_ms(1);		// Wait 1 ms for command execution
	
    while (1) 
    {
		while (!(SCD41_read_data_ready(SCD41_ADDR)));
		SCD41_read_meas(SCD41_ADDR);
    }
}

Fixed function, although not really sure how to implement this in main function. Might just submit what we originally have and then change the GitHub with the correct code.
void read_twi0_scd41(uint8_t saddr, uint8_t* data, uint8_t length)
{
	start_communication_twi0_scd41(saddr, READ); // Start I2C read transaction

	for (uint8_t i = 0; i < length; i++)
	{
		while (!(TWI0.MSTATUS & TWI_RIF_bm)); // Wait for data to be received

		data[i] = TWI0.MDATA; // Read the received byte

		if (i < (length - 1))
		{
			TWI0.MCTRLB = TWI_ACKACT_ACK_gc; // Send ACK for all but the last byte
		}
		else
		{
			TWI0.MCTRLB = TWI_ACKACT_NACK_gc | TWI_MCMD_STOP_gc; // Send NACK and STOP for the last byte
		}
	}

	// Wait until the bus returns to idle state
	while ((TWI0.MSTATUS & 0x03) != TWI_BUSSTATE_IDLE_gc);
}
